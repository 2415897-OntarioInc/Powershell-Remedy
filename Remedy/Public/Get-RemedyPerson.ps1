Function Get-RemedyPerson {
<#
.SYNOPSIS
    Returns details of a person in Remedy. This can be a customer or staff.
.EXAMPLE
    Get-RemedyPerson -Name Wragg -Staff
#>
    [cmdletbinding()]
    Param(
        #Name of the person you want to return details of.
        
        [Parameter(ParameterSetName=’ByName’)]
        [String]$Name,

        #Login ID of the person you want to return details of.
        [Parameter(ParameterSetName=’ByID’)]
        [String]$Login,

        #Use to return only people where Support Staff = Yes.
        [Switch]$Staff,

        #Return all available fields.
        [Switch]$Full,

        #An encoded string representing your Remedy Credentials as generated by the Set-RemedyApiConfig cmdlet.
        [String]$EncodedCredentials = (Get-RemedyApiConfig).Credentials,
        
        #The Remedy API URL. E.g: https://<localhost>:<port>/api
        [String]$APIURL = (Get-RemedyApiConfig).APIURL
    )

    $Headers = @{
        Authorization = "Basic $EncodedCredentials"
    }

    If ($Name)  { $FilterString = "'Full Name'LIKE""%25$Name%25""" }
    If ($Login) { $FilterString = "'Remedy Login ID'LIKE""%25$Login%25""" }

    $URL = "$APIURL/CTM:People/$FilterString"

    Try {
        $Result = Invoke-RestMethod -URI $URL -Headers $Headers -ErrorAction Stop
        
        $People = @()
        $Result.PSObject.Properties | ForEach-Object { $People += $_.Value } 

        If ($Staff) { $People = $People | Where-Object { $_.'Support Staff' -eq 'Yes' } }

        If (-not $Full){
            $People = $People | Select-Object 'Full Name','Remedy Login ID','JobTitle','Company','Internet E-mail','Support Staff','Submit Date'
        }
                
    } Catch {
        Write-Error $_
    }

    Return $People
}
